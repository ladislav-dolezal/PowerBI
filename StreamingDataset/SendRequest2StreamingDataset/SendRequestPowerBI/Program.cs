
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Text;
using Newtonsoft.Json;

namespace RealTimeStreaming
{
	class Program
	{
		// Paste your own push URL below as obtained from while creating Streaming Dataset and saved in step 9 above
		private static string realTimePushURL2 = "https://api.powerbi.com/beta/17d94c9c-214b-4038-a47d-745598e773c7/datasets/d8c582ba-4949-44df-9fdd-680b9546a7e0/rows?key=5oiT0SrbzDG50U5UyxoiKvNQchcIS0XdHvdmtmoUeAAZ0%2B%2FzU7%2Bgjf25nbtd043Xy6H2IOV3BiatS3SEpzdDzg%3D%3D";
		private static string realTimeClearURL2 = "https://api.powerbi.com/beta/17d94c9c-214b-4038-a47d-745598e773c7/datasets/d8c582ba-4949-44df-9fdd-680b9546a7e0/rows";

		private static string realTimePushURL1 = "https://api.powerbi.com/beta/17d94c9c-214b-4038-a47d-745598e773c7/datasets/b794ae24-e121-4cbb-bd30-beb4bca2bb15/rows?key=CbknERd2Bir3r7LCROAx%2Fi%2Fl14Dj%2BE3Dzxb5iyW3ufQY9buWMqR9LZYOIc0aBXbl1ErfyrlY3MympvxS4VsQ0A%3D%3D";

		public class Datarow
		{
			public int Hour;
			public int Value;
			public int Destination;
			public string Type;
		}

		static void Main(string[] args)
		{
			List<Datarow> lastDatarows = null;
			List<Datarow> newDatarows = null;

			while (true)
			{ //Set Infinite Loop
				try
				{
					// Declare values that we will be sending
					Random r = new Random();
					int currentValue = r.Next(0, 0);
					int destination = 0;
					
					// Send POST request to the push URL
					WebRequest request = WebRequest.Create(realTimePushURL2);
					request.Method = "POST";


					newDatarows = new List<Datarow>();

					if (lastDatarows != null)
					{
						foreach (var dr in lastDatarows)
						{
							if (dr.Destination > 0)
							{ 
								newDatarows.Add(new Datarow() { Destination = -dr.Destination, Hour = dr.Hour, Type = dr.Type, Value = -dr.Value });
							}
						}
					}

					for (int i = 6; i < 18; i++)
					{
						currentValue += r.Next(0, 10);
						destination += 3;
						newDatarows.Add(new Datarow() { Hour= i, Type= i.ToString(), Value = currentValue, Destination = destination});
					}

					lastDatarows = new List<Datarow>();
					lastDatarows.AddRange(newDatarows);
					
					//Here you will retrieve the data from the source and format as per the request.
					//In this example we are sending Random Value generated by above code for testing purpose.
					string postData = string.Empty;//					String.Format("[{ { \"Customer ID\": { 0}, \"Sales Value\":{ 1} } }]", currentValue,currentValue);

					postData = JsonConvert.SerializeObject(newDatarows);
					
					Console.WriteLine(String.Format("Making POST request with data: {0}", postData));

					// Prepare request for sending
					byte[] byteArray = Encoding.UTF8.GetBytes(postData);
					request.ContentLength = byteArray.Length;
					// Get the request stream.
					Stream dataStream = request.GetRequestStream();
					// Write the data to the request stream.
					dataStream.Write(byteArray, 0, byteArray.Length);
					// Close the Stream object.
					dataStream.Close();
					// Get the response.
					WebResponse response = request.GetResponse();

					// Display the status.
					Console.WriteLine(String.Format("Service response: {0}", ((HttpWebResponse)response).StatusCode));
					// Get the stream containing content returned by the server.
					dataStream = response.GetResponseStream();
					// Open the stream using a StreamReader for easy access.
					StreamReader reader = new StreamReader(dataStream);
					// Read the content.
					string responseFromServer = reader.ReadToEnd();
					// Display the content.
					Console.WriteLine(responseFromServer);
					// Clean up the streams.
					reader.Close();
					dataStream.Close();
					response.Close();
				}
				catch (Exception ex)
				{
					Console.WriteLine(ex);
				}
				// Wait 5 second before sending
				System.Threading.Thread.Sleep(1000);
			} //Infinite Loop ends here.
		}
	}

}
